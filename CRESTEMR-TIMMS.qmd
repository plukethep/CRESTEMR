---
format:
  html: default
---

```{r}
#https://timss2019.org/international-database/

library(haven)
library(glue)
library(labelled)
library(openxlsx)

get_country <- function(cntry, grade="8", year="19", file="bcgfinm7"){
  temp <- tempfile()
  download.file(glue(
    "https://timss20{year}.org/international-database/downloads/data/grade{grade}/T{year}_G{grade}_{cntry}_SPSS.zip"),
  temp) # download zip file and 
  return(read_sav(unz(temp, glue("{file}.sav")))) # load the SPSS file for...
}

# fetch the school data for any given set of countries
school_data <- 
  map_dfr(c("ENG", "FIN", "RUS", "FRA", "HKG", "SWE", "USA", "IRL", "ISR", "NOR", "TUR"),
         ~ {
           low_name <- tolower(.x)
           get_country(.x, file=glue("bcg{low_name}m7")) %>%
             map_dfc(function(y) to_factor(y)) %>% 
             mutate(CNTRY = .x)}
        ) 

school_data <- school_data %>%
  select(CNTRY, everything()) %>%
  # mutate(across(c(BCDGTIHY, BCBG19)) ~ as.numeric(levels(.x)[.x]))
  mutate(BCDGTIHY = as.numeric(levels(BCDGTIHY)[BCDGTIHY])) %>%
  mutate(BCBG19 = as.numeric(levels(BCBG19)[BCBG19])) %>%
  mutate(BCBG18 = as.numeric(levels(BCBG18)[BCBG18]))


wb <- createWorkbook()
addWorksheet(wb = wb, sheetName = "school_data", gridLines = FALSE)
writeData(wb = wb, sheet = 1, x = school_data)
saveWorkbook(wb,
             r"(C:\Users\Peter\Google Drive\Kings\R intro\code\TIMSS.xlsx)"
             , overwrite = TRUE)

?write_xlsx

# convert everything to factors
# school_data <- school_data %>% 
#   map_dfc(~ to_factor(.x))

# how long are the school days?
school_data %>% filter(!is.na(BCDGTIHY)) %>%
  mutate(BCDGTIHY = as.numeric(levels(BCDGTIHY)[BCDGTIHY])) %>%
  #group_by(CNTRY) %>% count()
  ggplot(aes(x=CNTRY, y=BCDGTIHY)) +
  geom_boxplot(outlier.shape = NA)+
  scale_y_continuous(limits = 
                       quantile(as.numeric(levels(school_data$BCDGTIHY)[school_data$BCDGTIHY]), 
                                c(0.1, 0.9),
                                na.rm=TRUE))


```

BCDGTIHY


names(school_data)

school_data$BCDGTIHY

# gets the label for a given column rather than values
dat %>% pull(BCBG03A) %>%
  map(~ val_label(dat %>% pull(BCBG03A), .x)[[1]]) %>% unlist()

val_label(school_data[,3], school_data[5,3][[1]])

# converts the column to a factor
dput(to_factor(school_data$BCBG03A))

school_data <- school_data %>% 
  map_dfc(~ to_factor(.x))

```